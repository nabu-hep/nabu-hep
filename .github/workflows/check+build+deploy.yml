name: Check/Build/Deploy

on:
  release:
    types: [published]
  push:
    branches: ["releases/**"]
  workflow_dispatch:

jobs:
  check:
    name: Check on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install -e .
    - name: Test with pytest
      run: |
        nabu-fit-to-data -test -dp test/data-2020-025-transformed.npz -op test/results -e 20
        # * p(χ²) = 0.0041%, p(KS) = 19.5177%
        pytest test/*py

  build:
    name: Build wheel
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4

      - name: Build NABU wheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
          python setup.py bdist_wheel

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: ./dist/*.whl

  deploy:
    name: Deploy to PyPI
    if: ${{ github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/release') }}
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/project/nabu-hep/
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheel
          merge-multiple: true
          path: dist

      - name: Debug
        run: ls -l dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
         user:     ${{ secrets.TWINE_USERNAME }}
         password: ${{ secrets.TWINE_PASSWORD }}
         skip_existing: true
